syntax = "proto3";

option go_package = "common/user";
package user;

import "google/api/annotations.proto";

service UserService {
  rpc GetAll(GetAllRequest) returns (GetAllResponse) {
    option (google.api.http) = {
      get: "/user",
    };
  }
  rpc GetAllHosts(GetAllHostsRequest) returns (GetAllHostsResponse) {
    option (google.api.http) = {
      get: "/getAllHosts",
    };
  }
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse) {
    option (google.api.http) = {
      get: "/user/{email}"
    };
  }
  rpc CreateUser(CreateUserRequest) returns(CreateUserResponse) {
    option (google.api.http) = {
      post: "/user"
      body: "user"
    };
  }
  rpc Login(LoginRequest) returns(LoginResponse){
    option (google.api.http) = {
      post: "/user/login"
      body: "login"
    };
  }
  rpc DeleteGuestUser(DeleteUserRequest) returns(DeleteUserResponse){
    option (google.api.http) = {
      post: "/user/deleteGuest/{id}"
      body: "*"
    };
  }
  rpc DeleteHostUser(DeleteUserRequest) returns(DeleteUserResponse){
    option (google.api.http) = {
      post: "/user/deleteHost/{id}"
      body: "*"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse){
    option (google.api.http) = {
      post: "/user/update"
      body: "user"
    };
  }
  rpc GetIfHostIsSuperHost(GetIfHostIsSuperHostRequest) returns (GetIfHostIsSuperHostResponse) {
    option (google.api.http) = {
      get: "/getIfHostIsSuperhost/{id}"
    };
  }
}
message GetUserByEmailResponse{
  User user = 1;
}
message GetUserByEmailRequest{
  string email = 1;
}
message LoginResponse {
  string jwt = 1;
}

message LoginRequest {
  AuthLogin login = 1;
}

message AuthLogin {
  string email = 1;
  string password = 2;
}
message DeleteUserRequest{
  string id = 1;
}
message DeleteUserResponse{
  User user = 1;
}
message UpdateUserRequest {
  User user = 1;
}
message UpdateUserResponse{
  User user = 1;
}
message CreateUserRequest {
  NewUser user = 1;
}
message CreateUserResponse {
  User user = 1;
}
message GetAllRequest{
}

message GetAllResponse{
  repeated User users = 1;
}
message GetAllHostsRequest {

}
message GetAllHostsResponse {
  repeated User users = 1;
}
message AddressDTO {
  string street = 1;
  string city = 2;
  string country = 3;
  string number = 4;
}

message NewUser {
  string firstName = 1;
  string lastName = 2;
  string role = 3;
  string email = 4;
  string password = 5;
  AddressDTO address = 6;
}

message User {
  string id = 1;
  string firstName = 2;
  string lastName = 3;
  string role = 4;
  string email = 5;
  string password = 6;
  AddressDTO address = 7;
}

message GetIfHostIsSuperHostRequest{
  string id = 1;
}

message GetIfHostIsSuperHostResponse{
  bool isSuperHost = 1;
}