syntax = "proto3";

option go_package = "common/reservation";
package reservation;

import "google/api/annotations.proto";

service ReservationService {
  rpc GetAll(GetAllRequest) returns (GetAllResponse) {
    option (google.api.http) = {
      get: "/reservation"
    };
  }
  rpc GetActiveReservationsByGuestId(GetActiveReservationsRequest) returns (GetActiveReservationsResponse) {
    option (google.api.http) = {
      get: "/getActiveReservationsByGuestId/{id}"
    };
  }
  rpc GetActiveReservationsByHostId(GetActiveReservationsRequest) returns (GetActiveReservationsResponse) {
    option (google.api.http) = {
      get: "/getActiveReservationsByHostId/{id}"
    };
  }

  rpc DeleteReservation(DeleteReservationRequest) returns(DeleteReservationResponse){
    option (google.api.http) = {
      delete: "/reservation/delete/{id}"
    };
  }
  rpc CreateReservation(CreateReservationRequest) returns(CreateReservationResponse) {
    option (google.api.http) = {
      post: "/reservation"
      body: "reservation"
    };
  }
}
message GetAllRequest{
}

message GetAllResponse{
  repeated Reservation reservations = 1;
}
message CreateReservationRequest {
  NewReservation reservation = 1;
}
message CreateReservationResponse {
  Reservation reservation = 1;
}

message NewReservation {
  int32 numberOfGuests = 1;
  string startDate = 2;
  string endDate = 3;
  string userId = 4;
  string accommodationId = 5;
}

message Reservation {
  string id = 1;
  int32 numberOfGuests = 2;
  string startDate = 3;
  string endDate = 4;
  string userId = 5;
  string accommodationId = 6;
  ReservationStatus reservationStatus = 7;
}

enum ReservationStatus {
  PENDING = 0;
  ACCEPTED = 1;
  CANCELED = 2;
}
message GetActiveReservationsRequest {
  string id = 1;
}

message GetActiveReservationsResponse {
  repeated Reservation reservations = 1;
}

message DeleteReservationRequest{
  string id = 1;
}
message DeleteReservationResponse{
  Reservation reservation = 1;
}
